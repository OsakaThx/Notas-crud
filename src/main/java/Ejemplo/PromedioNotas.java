package Ejemplo;

import Conexion.conexion;
import java.io.IOException;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.TableModel;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


public class PromedioNotas extends javax.swing.JFrame {

    conexion con = new conexion();
    Connection conect;
    DefaultTableModel model;
    Statement st;
    ResultSet rs;
    int idc;

    public PromedioNotas() {
        initComponents();
        this.setLocationRelativeTo(null);
        Consultar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        gruo1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        cbonivel = new javax.swing.JComboBox<>();
        date = new com.toedter.calendar.JDateChooser();
        rbescuela = new javax.swing.JRadioButton();
        rbcolegio = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtnota1 = new javax.swing.JTextField();
        txtnota2 = new javax.swing.JTextField();
        txtnota3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtpromedio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtmayor = new javax.swing.JTextField();
        txtmenor = new javax.swing.JTextField();
        lbmayor = new javax.swing.JLabel();
        lbmenor = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        BTNagregar = new javax.swing.JButton();
        BTNmodificar = new javax.swing.JButton();
        BTNeliminar = new javax.swing.JButton();
        BTNlimpiar = new javax.swing.JButton();
        BTNsalir = new javax.swing.JButton();
        BTNmaxmin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        btnReporte = new javax.swing.JButton();
        btnExcell = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Promedio de estudiante", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });

        txtapellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtapellidoActionPerformed(evt);
            }
        });

        date.setDateFormatString("yyyy/MM/dd");

        gruo1.add(rbescuela);
        rbescuela.setText("Escuela");
        rbescuela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbescuelaActionPerformed(evt);
            }
        });

        gruo1.add(rbcolegio);
        rbcolegio.setText("Colegio");
        rbcolegio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbcolegioActionPerformed(evt);
            }
        });

        jLabel3.setText("Primer Nota");

        jLabel4.setText("Segunda Nota");

        jLabel5.setText("Tercer Nota");

        txtnota1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnota1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Promedio Final");

        txtpromedio.setEnabled(false);
        txtpromedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpromedioActionPerformed(evt);
            }
        });

        jLabel7.setText("Mayor");

        jLabel8.setText("Menor");

        txtmenor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmenorActionPerformed(evt);
            }
        });

        lbmayor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lbmenor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbescuela, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbcolegio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(29, 29, 29)
                            .addComponent(cbonivel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(31, 31, 31)
                        .addComponent(txtnota1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtnota2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtnota3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtpromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmayor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbmayor, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmenor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbmenor, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbonivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtapellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtpromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtnota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtnota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(61, 61, 61))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbescuela)
                                .addComponent(rbcolegio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(txtnota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtmayor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtmenor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbmayor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbmenor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(80, Short.MAX_VALUE))))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CRUD", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        BTNagregar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNagregar.setText("Agregar");
        BTNagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregarActionPerformed(evt);
            }
        });

        BTNmodificar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNmodificar.setText("Modificar");
        BTNmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNmodificarActionPerformed(evt);
            }
        });

        BTNeliminar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNeliminar.setText("Eliminar");
        BTNeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNeliminarActionPerformed(evt);
            }
        });

        BTNlimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNlimpiar.setText("Limpiar");
        BTNlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNlimpiarActionPerformed(evt);
            }
        });

        BTNsalir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNsalir.setText("Salir");
        BTNsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNsalirActionPerformed(evt);
            }
        });

        BTNmaxmin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BTNmaxmin.setText("Max/Min");

        jPanel3.setBackground(new java.awt.Color(255, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Desglose de Notas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fecha", "Nombre", "Apellido", "Grado", "Nivel", "Primer Nota", "Segunda Nota", "Tercer Nota", "Promedio"
            }
        ));
        jScrollPane3.setViewportView(Table);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );

        btnReporte.setText("Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        btnExcell.setText("Reporte Excell");
        btnExcell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcellActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(BTNagregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNmodificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNeliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNlimpiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNsalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BTNmaxmin)
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcell)
                .addGap(150, 150, 150)
                .addComponent(btnReporte)
                .addGap(148, 148, 148))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReporte))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnExcell)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTNagregar)
                    .addComponent(BTNmodificar)
                    .addComponent(BTNeliminar)
                    .addComponent(BTNlimpiar)
                    .addComponent(BTNsalir)
                    .addComponent(BTNmaxmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTNmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNmodificarActionPerformed
        // TODO add your handling code here:
        
        
        modificarRegistro();
    }//GEN-LAST:event_BTNmodificarActionPerformed

    private void BTNlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNlimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos();
    }//GEN-LAST:event_BTNlimpiarActionPerformed

    private void txtapellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtapellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtapellidoActionPerformed

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void rbescuelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbescuelaActionPerformed
        // TODO add your handling code here:

        if (rbescuela.isSelected()) {

            cbonivel.removeAllItems();

            cbonivel.addItem("Seleccione:");

            cbonivel.addItem("Primero");

            cbonivel.addItem("Segundo");

            cbonivel.addItem("Tercero");

            cbonivel.addItem("Cuarto");

            cbonivel.addItem("Quinto");

            cbonivel.addItem("Sexto");

        } else {

        }

    }//GEN-LAST:event_rbescuelaActionPerformed

    private void txtmenorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmenorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmenorActionPerformed

    private void BTNagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregarActionPerformed

        // TODO add your handling code here:
        Agregar();
        Consultar();

    }//GEN-LAST:event_BTNagregarActionPerformed

    private void rbcolegioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbcolegioActionPerformed
        // TODO add your handling code here:

        if (rbcolegio.isSelected()) {
            cbonivel.removeAllItems();
            cbonivel.addItem("Seleccione:");
            cbonivel.addItem("Setimo");
            cbonivel.addItem("Octavo");
            cbonivel.addItem("Noveno");
            cbonivel.addItem("Decimo");
            cbonivel.addItem("Undecimo");
            cbonivel.addItem("Duodecimo");

        } else {

        }

    }//GEN-LAST:event_rbcolegioActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        int fila = Table.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una fila ");
        } else {
            idc = Integer.parseInt(Table.getValueAt(fila, 0).toString());
            String fecha = Table.getValueAt(fila, 1).toString();
            String nombre = Table.getValueAt(fila, 2).toString();
            String apellido = Table.getValueAt(fila, 3).toString();
            String grado = Table.getValueAt(fila, 4).toString();
            String nivel = Table.getValueAt(fila, 5).toString();
            double nota1 = Double.parseDouble((String) Table.getValueAt(fila, 6).toString());
            double nota2 = Double.parseDouble((String) Table.getValueAt(fila, 7).toString());
            double nota3 = Double.parseDouble((String) Table.getValueAt(fila, 8).toString());
            double notafinal = Double.parseDouble((String) Table.getValueAt(fila, 9).toString());
            java.util.Date fecha2;
            try {
                fecha2 = new SimpleDateFormat("yyyy-MM-dd").parse(fecha);
                date.setDate(fecha2);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Revisar error ");
            }
            txtnombre.setText(nombre);
            txtapellido.setText(apellido);
            if (nivel.equals("Escuela")) {
                rbescuela.setSelected(true);
                cbonivel.removeAllItems();
                cbonivel.addItem("Seleccione:");
                cbonivel.addItem("Primero");
                cbonivel.addItem("Segundo");
                cbonivel.addItem("Tercero");
                cbonivel.addItem("Cuarto");
                cbonivel.addItem("Quinto");
                cbonivel.addItem("Sexto");
                cbonivel.setSelectedItem(grado);
            } else if (nivel.equals("Colegio")) {
                rbcolegio.setSelected(true);
                cbonivel.removeAllItems();
                cbonivel.addItem("Seleccione:");
                cbonivel.addItem("Setimo");
                cbonivel.addItem("Octavo");
                cbonivel.addItem("Noveno");
                cbonivel.addItem("Decimo");
                cbonivel.addItem("Undecimo");
                cbonivel.addItem("Duodecimo");
                cbonivel.setSelectedItem(grado);
            }
            txtnota1.setText("" + nota1);
            txtnota2.setText("" + nota2);
            txtnota3.setText("" + nota3);
            txtpromedio.setText(" " + notafinal);
        }
    }//GEN-LAST:event_jPanel1MouseClicked

    private void BTNeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNeliminarActionPerformed
        // TODO add your handling code here:
        eliminarRegistro();
    }//GEN-LAST:event_BTNeliminarActionPerformed

    private void txtnota1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnota1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnota1ActionPerformed

    private void txtpromedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpromedioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpromedioActionPerformed

    private void BTNsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNsalirActionPerformed
        // TODO add your handling code here:
      
                int opcion = JOptionPane.showConfirmDialog(null, "¿Seguro que quieres salir?", "Confirmar salida", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    System.exit(0); // Cierra la aplicación
                }
            
        
        
        
    }//GEN-LAST:event_BTNsalirActionPerformed

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        // TODO add your handling code here:
       
 conexion con = new conexion(); 
    Connection conect = con.getConnection(); // Obtener la conexión de tu clase

    // Llamar al método para generar el PDF
    GeneratePdfReport.generatePdf(conect);

    // Mostrar mensaje de éxito
    JOptionPane.showMessageDialog(null, "PDF generado exitosamente en el escritorio.");
    }//GEN-LAST:event_btnReporteActionPerformed

    private void btnExcellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcellActionPerformed
        // TODO add your handling code here:
        
   conexion con = new conexion(); 
    Connection conect = con.getConnection(); // Obtener la conexión de tu clase

   
        // Llamar al método para generar el reporte Excel
        GenerateExcelReport.generateExcel(conect);

        // Mostrar mensaje de éxito
        JOptionPane.showMessageDialog(null, "Reporte Excel generado exitosamente.");
   
    


    }//GEN-LAST:event_btnExcellActionPerformed
  
    
    public class GenerateExcelReport {

    public static void generateExcel(Connection connection) {
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("Reporte Notas");

        // Crear una fila para los encabezados
        Row headerRow = sheet.createRow(0);
        String[] headers = {"ID", "Fecha", "Nombre", "Apellido", "Grado", "Nivel", "Primera Nota", "Segunda Nota", "Tercera Nota", "Nota Final"};
        for (int i = 0; i < headers.length; i++) {
            Cell cell = headerRow.createCell(i);
            cell.setCellValue(headers[i]);
        }

        // Obtener los datos de la base de datos
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            statement = connection.createStatement();
            resultSet = statement.executeQuery("SELECT id, fecha, nombre, apellido, grado, nivel, primernota, segundanota, tercernota, notafinal FROM notas");

            int rowNum = 1;
            while (resultSet.next()) {
                Row row = sheet.createRow(rowNum++);

                row.createCell(0).setCellValue(resultSet.getString("id"));
                row.createCell(1).setCellValue(resultSet.getString("fecha"));
                row.createCell(2).setCellValue(resultSet.getString("nombre"));
                row.createCell(3).setCellValue(resultSet.getString("apellido"));
                row.createCell(4).setCellValue(resultSet.getString("grado"));
                row.createCell(5).setCellValue(resultSet.getString("nivel"));
                row.createCell(6).setCellValue(resultSet.getString("primernota"));
                row.createCell(7).setCellValue(resultSet.getString("segundanota"));
                row.createCell(8).setCellValue(resultSet.getString("tercernota"));
                row.createCell(9).setCellValue(resultSet.getString("notafinal"));
            }

            // Escribir el archivo Excel
            try (FileOutputStream fileOut = new FileOutputStream("C:/Users/hoshu/OneDrive/Documents/Reporte_Notas.xlsx")) {
                workbook.write(fileOut);
            }

        } catch (SQLException | IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null && !connection.isClosed()) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
            try {
                workbook.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
    
    
    
    public class GeneratePdfReport {

    public static void generatePdf(Connection connection) {
        Document document = new Document();
        Statement statement = null;
        ResultSet resultSet = null;
        
        try {
            String ruta = "C:/Users/hoshu/OneDrive/Documents/Reporte_Notas.pdf";
            PdfWriter.getInstance(document, new FileOutputStream(ruta));
            document.open();

            // Crear una tabla con 10 columnas
            PdfPTable table = new PdfPTable(10);

            // Agregar encabezados a la tabla
            table.addCell("ID");
            table.addCell("Fecha");
            table.addCell("Nombre");
            table.addCell("Apellido");
            table.addCell("Grado");
            table.addCell("Nivel");
            table.addCell("Primera Nota");
            table.addCell("Segunda Nota");
            table.addCell("Tercera Nota");
            table.addCell("Nota Final");

            // Crear un statement para obtener los datos de la tabla
            statement = connection.createStatement();
            resultSet = statement.executeQuery("SELECT id, fecha, nombre, apellido, grado, nivel, primernota, segundanota, tercernota, notafinal FROM notas");

            // Llenar la tabla con los datos obtenidos de la base de datos
            while (resultSet.next()) {
                table.addCell(resultSet.getString("id"));
                table.addCell(resultSet.getString("fecha"));
                table.addCell(resultSet.getString("nombre"));
                table.addCell(resultSet.getString("apellido"));
                table.addCell(resultSet.getString("grado"));
                table.addCell(resultSet.getString("nivel"));
                table.addCell(resultSet.getString("primernota"));
                table.addCell(resultSet.getString("segundanota"));
                table.addCell(resultSet.getString("tercernota"));
                table.addCell(resultSet.getString("notafinal"));
            }

            document.add(table);
        } catch (DocumentException | FileNotFoundException | SQLException e) {
            e.printStackTrace();
        } finally {
            document.close();
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null && !connection.isClosed()) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}
    void Consultar() {
    String sql = "SELECT * FROM notas";
    try {
        if (conect == null || conect.isClosed()) {
            conect = con.getConnection(); // Vuelve a conectar si la conexión está cerrada
        }
        
        st = conect.createStatement();
        rs = st.executeQuery(sql);
        
        DefaultTableModel model = (DefaultTableModel) Table.getModel();
        model.setRowCount(0); // Limpiar todas las filas existentes
        
        while (rs.next()) {
            Object[] dato = new Object[10];
            dato[0] = rs.getInt("id");
            dato[1] = rs.getDate("fecha");
            dato[2] = rs.getString("nombre");
            dato[3] = rs.getString("apellido");
            dato[4] = rs.getString("grado");
            dato[5] = rs.getString("nivel");
            dato[6] = rs.getDouble("primernota");
            dato[7] = rs.getDouble("segundanota");
            dato[8] = rs.getDouble("tercernota");
            dato[9] = rs.getDouble("notafinal");
            model.addRow(dato);
        }
        
        Table.setModel(model);
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al consultar datos: " + e.getMessage());
    } finally {
        // Cerrar recursos en el bloque finally
        try {
            if (rs != null) rs.close();
            if (st != null) st.close();
            // No cerrar 'conect' aquí, puede necesitar ser reutilizado
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cerrar conexión: " + ex.getMessage());
        }
    }
}

    
 void modificarRegistro() {
    int filaSeleccionada = Table.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.");
        return;
    }

    String id = Table.getValueAt(filaSeleccionada, 0).toString();
    String fecha = Table.getValueAt(filaSeleccionada, 1).toString();
    String nombre = Table.getValueAt(filaSeleccionada, 2).toString();
    String apellido = Table.getValueAt(filaSeleccionada, 3).toString();
    String grado = Table.getValueAt(filaSeleccionada, 4).toString();
    String nivel = Table.getValueAt(filaSeleccionada, 5).toString();
    String nota1 = Table.getValueAt(filaSeleccionada, 6).toString();
    String nota2 = Table.getValueAt(filaSeleccionada, 7).toString();
    String nota3 = Table.getValueAt(filaSeleccionada, 8).toString();
    String notafinal = Table.getValueAt(filaSeleccionada, 9).toString();

    // Obtener los nuevos valores desde los campos de texto u otros componentes
    String nuevoNombre = txtnombre.getText();
    String nuevoApellido = txtapellido.getText();
    String nuevoGrado = cbonivel.getSelectedItem().toString();
    String nuevoNivel = rbescuela.isSelected() ? "Escuela" : "Colegio";
    String nuevaNota1 = txtnota1.getText();
    String nuevaNota2 = txtnota2.getText();
    String nuevaNota3 = txtnota3.getText();
    String nuevaNotaFinal = txtpromedio.getText();

    try {
        if (nuevoNombre.isEmpty() || nuevoApellido.isEmpty() || nuevoGrado.isEmpty() || nuevoNivel.isEmpty() || nuevaNota1.isEmpty() || nuevaNota2.isEmpty() || nuevaNota3.isEmpty() || nuevaNotaFinal.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Revise los datos");
        } else {
            // Verificar si los nuevos datos son diferentes a los actuales
            if (nuevoNombre.equals(nombre) && nuevoApellido.equals(apellido) && nuevoGrado.equals(grado) && nuevoNivel.equals(nivel)
                    && nuevaNota1.equals(nota1) && nuevaNota2.equals(nota2) && nuevaNota3.equals(nota3) && nuevaNotaFinal.equals(notafinal)) {
                JOptionPane.showMessageDialog(null, "No se realizaron cambios.");
                return;
            }

            String sql = "UPDATE notas SET fecha='" + fecha + "', nombre='" + nuevoNombre + "', apellido='" + nuevoApellido + "', grado='" + nuevoGrado + "', nivel='" + nuevoNivel + "', primernota=" + nuevaNota1 + ", segundanota=" + nuevaNota2 + ", tercernota=" + nuevaNota3 + ", notafinal=" + nuevaNotaFinal + " WHERE id=" + id;
            conect = con.getConnection();
            st = conect.createStatement();
            int resultado = st.executeUpdate(sql);

         
            if (resultado > 0) {
                JOptionPane.showMessageDialog(null, "Registro actualizado con éxito");

                // Limpiar campos de texto
                txtnombre.setText("");
                txtapellido.setText("");
                txtnota1.setText("");
                txtnota2.setText("");
                txtnota3.setText("");
                txtpromedio.setText("");

                // Actualizar y limpiar tabla
                Consultar(); // <-- Asegúrate de que este método actualice correctamente la tabla
            } else {
                JOptionPane.showMessageDialog(null, "No se encontró el registro para actualizar");
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar el registro: " + e.getMessage());
    }
}


void limpiarCampos() {
    
    txtnombre.setText("");  // Limpia el campo de nombre
    txtapellido.setText("");  
    txtnota1.setText("");
    txtnota2.setText("");
    txtnota3.setText("");
    txtpromedio.setText("");
    txtnombre.requestFocus();
    
}

    

    void Agregar() {
        String nivel = "";
        String nombre = txtnombre.getText();
        String apellido = txtapellido.getText();
        String grado = cbonivel.getSelectedItem().toString();
        String fecha = ((JTextField) date.getDateEditor().getUiComponent()).getText();
        if (rbescuela.isSelected()) {
            nivel = "Escuela";

        } else {
            nivel = "Colegio";
        }
        Double nota1 = Double.parseDouble(txtnota1.getText());
        Double nota2 = Double.parseDouble(txtnota2.getText());
        Double nota3 = Double.parseDouble(txtnota3.getText());
        DecimalFormat df = new DecimalFormat("###.##");
        double promedio = (nota1 + nota2 + nota3 / 3);
        try{
            if(nombre.equals("")|| apellido.equals("") || nota1.equals("") || nota2.equals("") || nota3.equals("") || cbonivel.equals("Seleccione:")){
                JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            } else {
                String sql="INSERT INTO notas(fecha,nombre,apellido,grado,nivel, primernota,segundanota,tercernota,notafinal) VALUES('"+fecha+"','"+nombre+"','"+apellido+"','"+grado+"','"+nivel+"','"+nota1+"','"+nota2+"','"+nota3+"','"+df.format(promedio)+"')";
                conect=con.getConnection();
                st=conect.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Datos ingresados");
                txtpromedio.setText(""+df.format(promedio));
                LimpiarTabla();
            }
                    
        }catch (Exception e){
            
        }
    }
    
    
    void eliminarRegistro() {
    int filaSeleccionada = Table.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.");
        return;
    }
    
    int confirmacion = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este registro?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);
    if (confirmacion != JOptionPane.YES_OPTION) {
        return;
    }
    
    String id = Table.getValueAt(filaSeleccionada, 0).toString();
    
    try {
        String sql = "DELETE FROM notas WHERE id=" + id;
        conect = con.getConnection();
        st = conect.createStatement();
        int resultado = st.executeUpdate(sql);
        
        if (resultado > 0) {
            JOptionPane.showMessageDialog(null, "Registro eliminado con éxito");
            // Eliminar la fila de la tabla en la interfaz gráfica
            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.removeRow(filaSeleccionada);
            Table.setModel(model); // Actualizar la tabla
        } else {
            JOptionPane.showMessageDialog(null, "No se encontró el registro para eliminar");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al eliminar el registro: " + e.getMessage());
    } finally {
        // Cerrar recursos en el bloque finally
        try {
            if (st != null) st.close();
            if (conect != null) conect.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cerrar conexión: " + ex.getMessage());
        }
    }
}

     
void LimpiarTabla() {
    DefaultTableModel modelo = (DefaultTableModel) Table.getModel();
    int rowCount = modelo.getRowCount();
    for (int i = rowCount - 1; i >= 0; i--) {
        modelo.removeRow(i);
    }
    
}


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PromedioNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PromedioNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PromedioNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PromedioNotas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PromedioNotas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNagregar;
    private javax.swing.JButton BTNeliminar;
    private javax.swing.JButton BTNlimpiar;
    private javax.swing.JButton BTNmaxmin;
    private javax.swing.JButton BTNmodificar;
    private javax.swing.JButton BTNsalir;
    private javax.swing.JTable Table;
    private javax.swing.JButton btnExcell;
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox<String> cbonivel;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.ButtonGroup gruo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbmayor;
    private javax.swing.JLabel lbmenor;
    private javax.swing.JRadioButton rbcolegio;
    private javax.swing.JRadioButton rbescuela;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtmayor;
    private javax.swing.JTextField txtmenor;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtnota1;
    private javax.swing.JTextField txtnota2;
    private javax.swing.JTextField txtnota3;
    private javax.swing.JTextField txtpromedio;
    // End of variables declaration//GEN-END:variables
}
